{"google":"UA-33720779-1","name":"Tableconn","body":"# Tableconn.js\r\nA lightweight Google Spreadsheet Table connector\r\n\r\n### The Problem\r\nI work for a major Brazilian newspaper (Estad√£o) and others may have the same problem as me. Large companies do not allow to change the header of the server to do CORS, not without months of meetings. This can be a bit stressful. Sometimes we just want to create a visualization with few data and be able to maintain the data from time to time.\r\n\r\n### The Advantage\r\nI agree that in general terms is not a good idea to use JSONP. But in the case of GDocs maybe we could make an exception. This would allow, for example, that your code operate without requiring a server. Great advantage for beginners. :)\r\n\r\nI wrote a first implementation of how this might work. It groups the two main ways that google allows to download data from the tables. Via feeds and SQL query (https://developers.google.com/chart/interactive/docs/querylanguage). So the client does not need to download the entire table at once. That first implementation has less than 50 lines, but We can try to reduce more =)\r\n\r\n### Requirements\r\nThe table must be configured as public. The first row of the table must have the column names.\r\n\r\n#### Restrictions\r\nGoogle Spreadsheet does not allow more than 20MB or 400.000 cells. So this strategy does not replace a good database.\r\n\r\n## Usage\r\n```javascript\r\nTC.load ({\r\n    url: \"\", //url or table key\r\n    sql: \"\", //table selection [optional]\r\n    hosted: false, //you can use google response from your own server [optional] \r\n    as_feed: false //strategy used to download data [optional]\r\n}, function (data) {\r\n    //where magic happens\r\n\r\n    //if you need to filter your data\r\n    TC.filter({column_name:\"match\"},function(result){\r\n      //'result' is a new array\r\n    })\r\n})\r\n```\r\n### D3js\r\nThe data structure is similar to that used by https://github.com/mbostock/d3 . Thus, you can use the 'tableconn' integrated with your visualization!\r\n\r\n### Security\r\nThe URL is disassembled, reassembled and parsed with a single callback enabled and it will runs within the Tableconn\r\n\r\n### Testing\r\nPlease open \"/test/test.html\" at your browser\r\n\r\n**TO-DO** *Include support for choose specific Sheets on table*\r\n\r\n","tagline":"A lightweight (1.8kb) connector for Google Spreadsheet Tables","note":"Don't delete this file! It's used internally to help with page regeneration."}